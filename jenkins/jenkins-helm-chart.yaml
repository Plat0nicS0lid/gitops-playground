apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: jenkins
  namespace: default
spec:
  repo:  https://charts.jenkins.io
  chart: jenkins
  version: 2.13.0
  targetNamespace: default
  valuesContent: |-
    # For updating, delete pvc jenkins-docker-client
    dockerClientVersion: 19.03.9
    
    master:
    
      # Use deterministic version and not "lts", which is pretty much the same as "latest".
      # Note: When updating, check if PATH of image still matches the one listed in "containerEnv"
      tag: 2.249.2-lts-alpine
    
      serviceType: NodePort
      nodePort: 9090
    
      # Don't install plugins on every pod start
      initializeOnce: true
    
      # Allow builds on master in order to facilitate an agent with docker CLI 
      numExecutors: 2
    
      JCasC:
        configScripts:
          # TODO use SCMM user secret keys for username and password
          scmm-credentials: |
            credentials:
              system:
                domainCredentials:
                - credentials:
                  - usernamePassword:
                      id: "scmm-user"
                      username: "${jenkins-admin-user}"
                      password: "${jenkins-admin-password}"
                      description: "Credentials for accessing SCM-Manager"
                      scope: GLOBAL
          # Set some more details on master agent
          # Add /docker to the PATH. Using "PATH=:/docker:${PATH}" is not working here, so copy PATH from container :-/
          # That is, this might have to be updated with newer version of the image
          master-agent: |
            jenkins:
              labelString: "docker"
              globalNodeProperties:
                - envVars:
                    env:
                    - key: "PATH"
                      value: "/usr/local/openjdk-8/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/docker"
    
      admin:
        # Use reproducible admin password from secret. Change there, if necessary.
        existingSecret: jenkins-credentials
    
      containerEnv:
        - name: SECRETS
          # The files in this folders can be used as ${variable} in CasC credentials
          # Default /run/secrets results in "read-only file system"
          value: /secrets/jenkins
    
      customInitContainers:
        # Download docker client
        - name: download-docker-client
          image: alpine:3.12.0
          imagePullPolicy: "{{ .Values.master.imagePullPolicy }}"
          command: ["/bin/sh", "-c"]
          args:
            - set -x;
              if [ -f /docker/docker ]; then echo 'Docker already installed'; exit 0; fi;
              cd /tmp;
              wget -qc https://download.docker.com/linux/static/stable/x86_64/docker-{{.Values.dockerClientVersion}}.tgz -O - | tar -xz;
              mv /tmp/docker/docker /docker/docker;
          volumeMounts:
            - name: docker-client
              mountPath: /docker
    
      # Allow access to docker socket. Running as root is not a good practice, but seems pragmatic here. 
      # Because other option setting "fsgroup" depends on the group ID of the "docker" group on each host.
      # This would require individual configuration,
      # Calling: "getent group docker | awk -F: '{ print $3}'" and setting the result manually as fsgroup.  
      #  fsGroup: 998
      # Also, with access to the docker socket, the container has root access to the host anyway. So why bother about the container?
      # It's a demo, after all!
      runAsUser: 0
    
    persistence:
      volumes:
        - name: docker-client
          # Persist, so the client does not have to be downloaded on each start
          persistentVolumeClaim:
            claimName: jenkins-docker-client
        - name: docker-sock # For this demo, allow jenkins master to access docker client 
          hostPath:
            path: /var/run/docker.sock
        - name: scmm-user
          secret:
            # TODO use SCMM user secret here
            secretName: jenkins-credentials
    
      mounts:
        - name: scmm-user
          # Use k8s secret as jenkins credentials.
          # https://github.com/jenkinsci/configuration-as-code-plugin/blob/master/docs/features/secrets.adoc#kubernetes-secrets
          mountPath: /secrets/jenkins
          readOnly: true
        - name: docker-client
          mountPath: /docker
          readOnly: true
        - name: docker-sock
          mountPath: "/var/run/docker.sock"
          readOnly: true
      
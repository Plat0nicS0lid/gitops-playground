apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd-notifications
  namespace: argocd
spec:
  destination:
    namespace: argocd
    server: https://kubernetes.default.svc
  project: system
  source:
    path: charts/argocd-notifications
    repoURL: https://github.com/argoproj/argo-helm/
    targetRevision: argocd-notifications-1.5.1
    helm:
      values: |
        argocdUrl: http://localhost:9092
        notifiers:
          service.email: |
            host: mailhog.monitoring.svc.cluster.local
            port: 1025
            from: argocd-alerts@cloudogu.com
        subscriptions: # this subscription block handles GLOBAL notifications. every application in every project is going to be notified about the set triggers
          - recipients:
            - email:alerts@cloudogu.com
            triggers: # these correspond to the triggers which you can find at the end of this file
            - on-health-degraded
            - on-sync-failed
        templates:
          template.app-deployed: |
            email:
              subject: New version of an application {{.app.metadata.name}} is up and running.
            message: |
              Application {{.app.metadata.name}} is now running new version of deployments manifests.
          template.app-health-degraded: |
            email:
              subject: Application {{.app.metadata.name}} has degraded.
            message: |
              Application {{.app.metadata.name}} has degraded.
              Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.
          template.app-sync-failed: |
            email:
              subject: Failed to sync application {{.app.metadata.name}}.
            message: |
              The sync operation of application {{.app.metadata.name}} has failed at {{.app.status.operationState.finishedAt}} with the following error: {{.app.status.operationState.message}}
              Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .
          template.app-sync-running: |
            email:
              subject: Start syncing application {{.app.metadata.name}}.
            message: |
              The sync operation of application {{.app.metadata.name}} has started at {{.app.status.operationState.startedAt}}.
              Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .
          template.app-sync-status-unknown: |
            email:
              subject: Application {{.app.metadata.name}} sync status is 'Unknown'
            message: |
              Application {{.app.metadata.name}} sync is 'Unknown'.
              Application details: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}.
              {{range $c := .app.status.conditions}}
                  * {{$c.message}}
              {{end}}
          template.app-sync-succeeded: |
            email:
              subject: Application {{.app.metadata.name}} has been successfully synced.
            message: |
              Application {{.app.metadata.name}} has been successfully synced at {{.app.status.operationState.finishedAt}}.
              Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .
          template.app-sync-status-longer-10s: |
            email:
              subject: Application {{.app.metadata.name}} is too long in sync status.
            message: |
              The Application {{.app.metadata.name}} is now longer than 10 seconds in sync status. This may be because one of its resources resides in a SyncFailed status.
              Sync operation details are available at: {{.context.argocdUrl}}/applications/{{.app.metadata.name}}?operation=true .
        triggers:
          trigger.on-deployed: |
            - description: Application is synced and healthy. Triggered once per commit.
              oncePer: app.status.sync.revision
              send:
              - app-deployed
              when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'
          trigger.on-health-degraded: |
            - description: Application has degraded
              send:
              - app-health-degraded
              when: app.status.health.status == 'Degraded'
          trigger.on-sync-failed: |
            - description: Application syncing has failed
              send:
              - app-sync-failed
              when: app.status.operationState.phase in ['Error', 'Failed']
          trigger.on-sync-running: |
            - description: Application is being synced
              send:
              - app-sync-running
              when: app.status.operationState.phase in ['Running']
          trigger.on-sync-status-unknown: |
            - description: Application status is 'Unknown'
              send:
              - app-sync-status-unknown
              when: app.status.sync.status == 'Unknown'
          trigger.on-sync-succeeded: |
            - description: Application syncing has succeeded
              send:
              - app-sync-succeeded
              when: app.status.operationState.phase in ['Succeeded']
          trigger.on-sync-status-longer-10s: |
            - description: Application syncing is longer than 10 seconds
              send:
              - app-sync-status-longer-10s
              when: app.status.operationState.phase in ['Running'] and time.Now().Sub(time.Parse(app.status.operationState.startedAt)).Seconds() >= 10
  syncPolicy:
    automated: {}
